@startuml Rosie-Rivet

class RivetController {
   + Rivet Rivet
   + processFile( dataJSON ) : JSON 
   + retrieveMetadata ( ) : JSON
}

class Rivet {
    + List Riveters riveterList
    + DataFrame fileContents
    + float confidence

    + __self__( fileContents, *Riveters, confidence ) : Rivet
    + addRivet ( Riveter ) : boolean
    + applyRivets( List Riveters, DataFrame fileContents, confidence ) : DataFrame rivetedContents

    ' myRivet = Rivet.parseWeb(JSON) is example call
}

class RivetIO {
    + write_file( filename ) : none
    + parse( filename ) : Rivet
    + parse( json ) : Rivet
}

abstract class Riveter {
    + apply(List column) : List rivetedColumn
    + getName() : rivetName
}

class GeneDateRiveter extends Riveter {
    + known_gene_mistakes : Dictionary
    + GeneDateRiveter( self )
}

class DateRiveter extends Riveter {
    + month_dict : Dictionary
    + DateRiveter( self )
}

class CSVInjectionRiveter extends Riveter {
    + CSVInjectionRiveter( self )
}

class LargeIntegerRiveter extends Riveter {
    + LargeIntegerRiveter( self )
}

class LocaleRiveter extends Riveter {
    + LocaleRiveter( self )
}


@enduml